{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Banugopan\\\\Desktop\\\\Proshop\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState, useEffect} from 'react'\n// import { Link } from 'react-router-dom'\n// import { Form, Button } from 'react-bootstrap'\n// import { useDispatch, useSelector} from 'react-redux'\n// import Message from '../components/Message'\n// import Loader from '../components/Loader'\n// import FormContainer from '../components/FormContainer'\n// import { getUserDetails } from '../actions/userActions'\n//  const dispatch = useDispatch()\n//  const userDetails = useSelector(state => state.userDetails)\n//  const { loading, error, user} = userDetails\n//  console.log(userDetails)\n//  useEffect(() => {\n//    if (!user.name || user._id !== userId) {\n//        dispatch(getUserDetails(userId))\n//    } else {\n//     //    setName(user.name)\n//        setEmail(user.email)\n//        setIsAdmin(user.isAdmin)\n//    }\n// }, [dispatch, userId, user])\n//  const submitHandler = (e) => {\n//      e.preventDefault()\n//  }\n// }\n// export default UserEditScreen\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails } from '../actions/userActions';\n\nconst UserEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n        dispatch(listmyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserEditScreen, \"ef0A9ioGZkG05SCD7UdXsE3yEqI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["C:/Users/Banugopan/Desktop/Proshop/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Form","Button","FormContainer","useDispatch","useSelector","Message","Loader","getUserDetails","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","push","type","USER_UPDATE_PROFILE_RESET","listmyOrders","submitHandler","e","preventDefault","password","confirmPassword","setMessage","updateUserProfile","_id","target","value","checked"],"mappings":"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","sourcesContent":["// import React, {useState, useEffect} from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import { Form, Button } from 'react-bootstrap'\r\n// import { useDispatch, useSelector} from 'react-redux'\r\n// import Message from '../components/Message'\r\n// import Loader from '../components/Loader'\r\n// import FormContainer from '../components/FormContainer'\r\n// import { getUserDetails } from '../actions/userActions'\r\n\r\n\r\n\r\n \r\n//  const dispatch = useDispatch()\r\n\r\n//  const userDetails = useSelector(state => state.userDetails)\r\n//  const { loading, error, user} = userDetails\r\n//  console.log(userDetails)\r\n\r\n//  useEffect(() => {\r\n//    if (!user.name || user._id !== userId) {\r\n//        dispatch(getUserDetails(userId))\r\n//    } else {\r\n//     //    setName(user.name)\r\n//        setEmail(user.email)\r\n//        setIsAdmin(user.isAdmin)\r\n//    }\r\n// }, [dispatch, userId, user])\r\n\r\n//  const submitHandler = (e) => {\r\n//      e.preventDefault()\r\n     \r\n//  }\r\n\r\n    \r\n// }\r\n\r\n// export default UserEditScreen\r\n\r\n\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails} from '../actions/userActions'\r\n\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\nconst userId = match.params.id\r\n\r\n const [name, setName] = useState('')\r\n const [email, setEmail] = useState('')\r\n const [isAdmin, setIsAdmin] = useState(false)\r\n \r\n\r\n const dispatch = useDispatch()\r\n\r\n const userDetails = useSelector(state => state.userDetails)\r\n const { loading, error, user} = userDetails\r\n\r\n const userLogin = useSelector(state => state.userLogin)\r\n const { userInfo } = userLogin\r\n\r\n const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n const { success } = userUpdateProfile\r\n\r\n const orderListMy = useSelector(state => state.orderListMy)\r\n const { loading: loadingOrders, error: errorOrders, orders} = orderListMy\r\n\r\n useEffect(() => {\r\n    if(!userInfo) {\r\n        history.push('/login')\r\n    }else {\r\n        if(!user || !user.name || success) {\r\n            dispatch({\r\n                type: USER_UPDATE_PROFILE_RESET\r\n            })\r\n            dispatch(getUserDetails('profile'))\r\n            dispatch(listmyOrders())\r\n        } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n        }\r\n    }\r\n}, [dispatch, history, userInfo, user, success])\r\n\r\n const submitHandler = (e) => {\r\n     e.preventDefault()\r\n     if (password !== confirmPassword){\r\n         setMessage('Passwords do not match')\r\n     } else {\r\n           dispatch(updateUserProfile({ id: user._id, name, email, password}))\r\n     }\r\n }\r\n\r\n return (\r\n        <>\r\n        <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User</h1>\r\n            { loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n             <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='isadmin'>\r\n                    <Form.Check type='checkbox' label='Is Admin'\r\n                    checked={isAdmin}\r\n                    onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            )}\r\n            </FormContainer>\r\n            </>\r\n    )  \r\n    \r\n}\r\n\r\nexport default UserEditScreen\r\n"]},"metadata":{},"sourceType":"module"}