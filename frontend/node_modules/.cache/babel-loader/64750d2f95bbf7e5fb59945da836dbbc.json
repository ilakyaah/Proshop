{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/Banugopan/Desktop/Proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{saveShippingAddress}from'../actions/cartActions';var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];var _useState3=useState(shippingAddress.city),_useState4=_slicedToArray(_useState3,2),city=_useState4[0],setCity=_useState4[1];var _useState5=useState(shippingAddress.postalCode),_useState6=_slicedToArray(_useState5,2),postalCode=_useState6[0],setPostalCode=_useState6[1];var _useState7=useState(shippingAddress.country),_useState8=_slicedToArray(_useState7,2),country=_useState8[0],setCountry=_useState8[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address,city:city,postalCode:postalCode,country:country}));history.push('/payment');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"address\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter address\",value:address,required:true,onChange:function onChange(e){return setAddress(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"city\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"City\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter city\",value:city,required:true,onChange:function onChange(e){return setCity(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"postalCode\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Postal Code\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter postal code\",value:postalCode,required:true,onChange:function onChange(e){return setPostalCode(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"country\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Country\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter country\",value:country,required:true,onChange:function onChange(e){return setCountry(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default ShippingScreen;","map":{"version":3,"sources":["C:/Users/Banugopan/Desktop/Proshop/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart =useSelector(state => state.cart)\r\n  const { shippingAddress} = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter address'\r\n                    value={address} required\r\n                    onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter city'\r\n                    value={city} required\r\n                    onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter postal code'\r\n                    value={postalCode} required\r\n                    onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter country'\r\n                    value={country} required\r\n                    onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n"]},"metadata":{},"sourceType":"module"}