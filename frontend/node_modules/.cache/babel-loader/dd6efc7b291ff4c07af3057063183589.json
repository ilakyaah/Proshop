{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"C:/Users/Banugopan/Desktop/Proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress.address){history.push('/shipping');}var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["C:/Users/Banugopan/Desktop/Proshop/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","address","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"0PAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAiC,iBAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAwC,aAAxC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACrC,GAAMC,CAAAA,IAAI,CAAEN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAvB,CADqC,GAE7BE,CAAAA,eAF6B,CAEVF,IAFU,CAE7BE,eAF6B,CAIrC,GAAG,CAACA,eAAe,CAACC,OAApB,CAA6B,CACzBJ,OAAO,CAACK,IAAR,CAAa,WAAb,EACH,CANoC,cAQMf,QAAQ,CAAC,QAAD,CARd,wCAQ7BgB,aAR6B,eAQdC,gBARc,eAUnC,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA,GAAMe,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACV,iBAAiB,CAACQ,aAAD,CAAlB,CAAR,CACAN,OAAO,CAACK,IAAR,CAAa,aAAb,EACH,CAJD,CAMA,mBACI,MAAC,aAAD,yBACI,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADJ,cAEI,sCAFJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAGA,KAAC,GAAD,wBACG,KAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CACA,KAAK,CAAC,uBADN,CAEA,EAAE,CAAC,QAFH,CAGA,IAAI,CAAC,eAHL,CAIA,KAAK,CAAC,QAJN,CAKA,OAAO,KALP,CAMA,QAAQ,CAAI,kBAACC,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EANZ,EADH,EAHA,GADJ,cAqBI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBArBJ,GAHJ,GADJ,CA+BH,CAjDD,CAmDA,cAAed,CAAAA,aAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport { Form, Button, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart =useSelector(state => state.cart)\r\n  const { shippingAddress} = cart\r\n\r\n  if(!shippingAddress.address) {\r\n      history.push('/shipping')\r\n  }\r\n\r\n   const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                \r\n                <Col>\r\n                   <Form.Check type='radio'\r\n                   label='PayPal or Credit Card'\r\n                   id='PayPal'\r\n                   name='paymentMethod'\r\n                   value='PayPal'\r\n                   checked\r\n                   onChange = {(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n\r\n                   {/* <Form.Check type='radio'\r\n                   label='Stripe'\r\n                   id='Stripe'\r\n                   name='paymentMethod'\r\n                   value='Stripe'\r\n                   onChange = {(e) => setPaymentMethod(e.target.value)}></Form.Check> */}\r\n                </Col>\r\n               </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n"]},"metadata":{},"sourceType":"module"}