{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDeleteReducer: productDeleteReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Banugopan/Desktop/Proshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,kBAAR,EAA2BC,qBAA3B,EAAiDC,oBAAjD,QAA4E,4BAA5E;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,EAA8FC,eAA9F,EAA+GC,iBAA/G,EAAkIC,iBAAlI,QAA2J,yBAA3J;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,eAAlD,EAAmEC,kBAAnE,QAA6F,0BAA7F;AAEA,MAAMC,OAAO,GAAGnB,eAAe,CAAC;AAC5BoB,EAAAA,WAAW,EAAEhB,kBADe;AAE5BiB,EAAAA,cAAc,EAAEhB,qBAFY;AAG5BC,EAAAA,oBAAoB,EAAEA,oBAHM;AAI5BgB,EAAAA,IAAI,EAAEf,WAJsB;AAK5BgB,EAAAA,SAAS,EAAEf,gBALiB;AAM5BgB,EAAAA,YAAY,EAAEf,mBANc;AAO5BgB,EAAAA,WAAW,EAAEf,kBAPe;AAQ5BgB,EAAAA,iBAAiB,EAAEf,wBARS;AAS5BgB,EAAAA,QAAQ,EAAEf,eATkB;AAU5BgB,EAAAA,UAAU,EAAEf,iBAVgB;AAW5BgB,EAAAA,UAAU,EAAEf,iBAXgB;AAY5BgB,EAAAA,WAAW,EAAEf,kBAZe;AAa5BgB,EAAAA,YAAY,EAAEf,mBAbc;AAc5BgB,EAAAA,QAAQ,EAAEf,eAdkB;AAe5BgB,EAAAA,WAAW,EAAEf;AAfe,CAAD,CAA/B;AAkBA,MAAMgB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACEC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADF,GAEE,EAF/B;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACGC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADH,GAEG,IAF/B;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACJC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADI,GAEJ,EAF/B;AAIA,MAAMK,YAAY,GAAG;AACjBnB,EAAAA,IAAI,EAAE;AAAEoB,IAAAA,SAAS,EAAER,oBAAb;AAAmCS,IAAAA,eAAe,EAAEH;AAApD,GADW;AAEjBjB,EAAAA,SAAS,EAAE;AAAEqB,IAAAA,QAAQ,EAAEL;AAAZ;AAFM,CAArB;AAKA,MAAMM,UAAU,GAAG,CAAC3C,KAAD,CAAnB;AAEA,MAAM4C,KAAK,GAAG/C,WAAW,CAACoB,OAAD,EAASsB,YAAT,EAAsBtC,mBAAmB,CAACF,eAAe,CAAC,GAAG4C,UAAJ,CAAhB,CAAzC,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {productListReducer,productDetailsReducer,productDeleteReducer} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDeleteReducer: productDeleteReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin: { userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}