{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Banugopan\\\\Desktop\\\\Proshop\\\\frontend\\\\src\\\\screens\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState, useEffect} from 'react'\n// import { Link } from 'react-router-dom'\n// import { Form, Button} from 'react-bootstrap'\n// import FormContainer from '../components/FormContainer'\n// import { useDispatch, useSelector} from 'react-redux'\n// import Message from '../components/Message'\n// import Loader from '../components/Loader'\n// import { getUserDetails } from '../actions/userActions'\n// const UserEditScreen = ({ match, history }) => {\n// const userId = match.params.id\n//  const [name, setName] = useState('')\n//  const [email, setEmail] = useState('')\n//  const [isAdmin, setIsAdmin] = useState(false)\n// const dispatch = useDispatch()\n//  const userDetails = useSelector(state => state.userDetails)\n//  const { loading, error, user} = userDetails\n// // useEffect(() => {\n// //        if(!user.name || user._id !== userId) {\n// //            dispatch(getUserDetails(userId))\n// //        } else {\n// //            setName(user.name)\n// //            setEmail(user.email)\n// //            setIsAdmin(user.isAdmin)\n// //        }\n// //    },[dispatch, user, userId])\n//  const submitHandler = (e) => {\n//      e.preventDefault()\n//  }\n//  return (\n//         <>\n//         <Link to='/admin/userlist' className='btn btn-light my-3'>\n//             Go Back\n//         </Link>\n//         <FormContainer>\n//             <h1>Edit User</h1>\n//             { loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n//              <Form onSubmit={submitHandler}>\n//               <Form.Group controlId='name'>\n//                     <Form.Label>Name</Form.Label>\n//                     <Form.Control type='name' placeholder='Enter name'\n//                     value={name}\n//                     onChange={(e) => setName(e.target.value)}></Form.Control>\n//                 </Form.Group>\n//                 <Form.Group controlId='email'>\n//                     <Form.Label>Email Address</Form.Label>\n//                     <Form.Control type='email' placeholder='Enter email'\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}></Form.Control>\n//                 </Form.Group>\n//                  <Form.Group controlId='isadmin'>\n//                     <Form.Check type='checkbox' label='Is Admin'\n//                     checked={isAdmin}\n//                     onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\n//                 </Form.Group>\n//                 <Button type='submit' variant='primary'>\n//                     Update\n//                 </Button>\n//              </Form>\n//             )}\n//             </FormContainer>\n//             </>\n//     )  \n// }\n// export default UserEditScreen\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { listmyOrders } from '../actions/orderActions';\n\nconst ProfileScreen = ({\n  location,\n  history,\n  match\n}) => {\n  _s();\n\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  console.log(userDetails);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [dispatch, user, userId]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"isadmin\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: \"Is Admin\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProfileScreen, \"OvH4u0bwBBe7plAxBvD3TlozCDg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/Banugopan/Desktop/Proshop/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","FormContainer","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","listmyOrders","ProfileScreen","location","history","match","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","console","log","userLogin","userInfo","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["// import React, {useState, useEffect} from 'react'\r\n// import { Link } from 'react-router-dom'\r\n// import { Form, Button} from 'react-bootstrap'\r\n// import FormContainer from '../components/FormContainer'\r\n// import { useDispatch, useSelector} from 'react-redux'\r\n// import Message from '../components/Message'\r\n// import Loader from '../components/Loader'\r\n// import { getUserDetails } from '../actions/userActions'\r\n\r\n\r\n// const UserEditScreen = ({ match, history }) => {\r\n// const userId = match.params.id\r\n\r\n//  const [name, setName] = useState('')\r\n//  const [email, setEmail] = useState('')\r\n//  const [isAdmin, setIsAdmin] = useState(false)\r\n \r\n// const dispatch = useDispatch()\r\n\r\n//  const userDetails = useSelector(state => state.userDetails)\r\n//  const { loading, error, user} = userDetails\r\n\r\n// // useEffect(() => {\r\n// //        if(!user.name || user._id !== userId) {\r\n// //            dispatch(getUserDetails(userId))\r\n// //        } else {\r\n// //            setName(user.name)\r\n// //            setEmail(user.email)\r\n// //            setIsAdmin(user.isAdmin)\r\n// //        }\r\n// //    },[dispatch, user, userId])\r\n\r\n//  const submitHandler = (e) => {\r\n//      e.preventDefault()\r\n     \r\n//  }\r\n\r\n//  return (\r\n//         <>\r\n//         <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n//             Go Back\r\n//         </Link>\r\n//         <FormContainer>\r\n//             <h1>Edit User</h1>\r\n//             { loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n//              <Form onSubmit={submitHandler}>\r\n//               <Form.Group controlId='name'>\r\n//                     <Form.Label>Name</Form.Label>\r\n//                     <Form.Control type='name' placeholder='Enter name'\r\n//                     value={name}\r\n//                     onChange={(e) => setName(e.target.value)}></Form.Control>\r\n//                 </Form.Group>\r\n\r\n//                 <Form.Group controlId='email'>\r\n//                     <Form.Label>Email Address</Form.Label>\r\n//                     <Form.Control type='email' placeholder='Enter email'\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n//                 </Form.Group>\r\n\r\n//                  <Form.Group controlId='isadmin'>\r\n//                     <Form.Check type='checkbox' label='Is Admin'\r\n//                     checked={isAdmin}\r\n//                     onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n//                 </Form.Group>\r\n\r\n//                 <Button type='submit' variant='primary'>\r\n//                     Update\r\n//                 </Button>\r\n//              </Form>\r\n//             )}\r\n//             </FormContainer>\r\n//             </>\r\n//     )  \r\n    \r\n// }\r\n\r\n// export default UserEditScreen\r\n\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button} from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listmyOrders } from '../actions/orderActions'\r\n\r\nconst ProfileScreen = ({ location, history,match }) => {\r\n\r\nconst userId = match.params.id\r\n const [name, setName] = useState('')\r\n const [email, setEmail] = useState('')\r\n const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n\r\n const dispatch = useDispatch()\r\n\r\n const userDetails = useSelector(state => state.userDetails)\r\n const { loading, error, user} = userDetails\r\n console.log(userDetails)\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n const { userInfo } = userLogin\r\n\r\n \r\nuseEffect(() => {\r\n       if(!user.name || user._id !== userId) {\r\n           dispatch(getUserDetails(userId))\r\n       } else {\r\n           setName(user.name)\r\n           setEmail(user.email)\r\n           setIsAdmin(user.isAdmin)\r\n       }\r\n   },[dispatch, user, userId])\r\n\r\n const submitHandler = (e) => {\r\n     e.preventDefault()\r\n   \r\n }\r\n\r\n   return (\r\n        <>\r\n        <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n            Go Back\r\n        </Link>\r\n        <FormContainer>\r\n            <h1>Edit User</h1>\r\n            { loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n             <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='isadmin'>\r\n                    <Form.Check type='checkbox' label='Is Admin'\r\n                    checked={isAdmin}\r\n                    onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n             </Form>\r\n            )}\r\n            </FormContainer>\r\n            </>\r\n    )  \r\n    \r\n}\r\n\r\n\r\nexport default ProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}