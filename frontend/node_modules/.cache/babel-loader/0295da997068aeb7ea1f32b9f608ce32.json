{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Banugopan\\\\Desktop\\\\Proshop\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\n\nconst ProductScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-light my-3\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 45\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: \", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"$\", product.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 35\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 35\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 28\n            }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Qty:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    as: \"select\",\n                    value: qty,\n                    onChange: e => setQty(e.target.value),\n                    children: [...Array(product.countInStock).keys()].map(index => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: index + 1,\n                      children: index + 1\n                    }, index + 1, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 46\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 40\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block\",\n                type: \"button\",\n                disabled: product.countInStock === 0,\n                onClick: addToCartHandler,\n                children: \"Add To Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductScreen, \"lDBTZcuE3rLJp3qsVWTmqiqsJAA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["C:/Users/Banugopan/Desktop/Proshop/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","Row","Col","Image","ListGroup","Card","Button","Form","Rating","Loader","Message","listProductDetails","createProductReview","PRODUCT_CREATE_REVIEW_RESET","ProductScreen","history","match","qty","setQty","dispatch","productDetails","state","loading","error","product","params","id","addToCartHandler","push","image","name","rating","numReviews","price","description","countInStock","e","target","value","Array","keys","map","index"],"mappings":"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","sourcesContent":["import React, { useState,useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button,Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails,  createProductReview, } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({history,match }) => {\r\nconst [qty, setQty] = useState(1)\r\n\r\nconst dispatch = useDispatch()  \r\n\r\nconst productDetails = useSelector(state => state.productDetails)\r\n const { loading, error, product} = productDetails\r\n\r\nuseEffect(() => {\r\n   dispatch(listProductDetails(match.params.id))\r\n},[dispatch,match])\r\n\r\nconst addToCartHandler = () => {\r\n      history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n}\r\n\r\n    return (\r\n        <>\r\n          <Link className='btn btn-light my-3' to='/'>\r\n              Go Back\r\n          </Link>\r\n          {loading ? (<Loader/>) : error ? (<Message variant='danger'>{error}</Message>) : (\r\n            <Row>\r\n              <Col md={6}>\r\n                  <Image src={product.image} alt={product.name} fluid/>\r\n              </Col>\r\n              <Col md={3}>\r\n                  <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                          <h3>{product.name}</h3>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\r\n\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          price: ${product.price}\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                          Description: {product.description}\r\n                      </ListGroup.Item>\r\n                  </ListGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                  <Card>\r\n                      <ListGroup variant='flush'>\r\n                          <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>\r\n                                  Price:\r\n                                  </Col>\r\n                                  <Col><strong>${product.price}</strong></Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n\r\n                           <ListGroup.Item>\r\n                              <Row>\r\n                                  <Col>\r\n                                  Status:\r\n                                  </Col>\r\n                                  <Col>\r\n                                  {product.countInStock > 0 ? 'In Stock': 'Out Of Stock'}\r\n                                  </Col>\r\n                              </Row>\r\n                          </ListGroup.Item>\r\n                          {product.countInStock > 0 && (\r\n                              <ListGroup.Item>\r\n                                  <Row>\r\n                                      <Col>Qty:</Col>\r\n                                       <Col>\r\n                                      \r\n                                       <Form as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                         {[...Array(product.countInStock).keys()].map((index) => (\r\n                                             <option key={index + 1} value={index + 1}>\r\n                                                 {index + 1}\r\n                                             </option>\r\n                                         ))}\r\n                                       </Form>\r\n                                    \r\n                                      </Col> \r\n                                  </Row>\r\n                              </ListGroup.Item>\r\n                          )}\r\n                          <ListGroup.Item>\r\n                              <Button className='btn-block' type='button' disabled = { product.countInStock === 0 }\r\n                              onClick={addToCartHandler}>\r\n                                  Add To Cart\r\n                              </Button>\r\n                          </ListGroup.Item>\r\n                      </ListGroup>\r\n                  </Card>\r\n              </Col>\r\n          </Row>\r\n          )}      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n"]},"metadata":{},"sourceType":"module"}