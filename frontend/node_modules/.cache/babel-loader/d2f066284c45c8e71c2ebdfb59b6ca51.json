{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/orders', order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listmyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Banugopan/Desktop/Proshop/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listmyOrders"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_CREATE_REQUEST})\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n         const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/orders', order, config)\r\n        dispatch({type: ORDER_CREATE_SUCCESS, payload: data})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                     ? error.response.data.message\r\n                     : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_DETAILS_REQUEST})\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n         const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`,config)\r\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload: data})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                     ? error.response.data.message\r\n                     : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_PAY_REQUEST})\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n         const config = {\r\n            headers: {\r\n                'Content': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\r\n        dispatch({type: ORDER_PAY_SUCCESS, payload: data})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                     ? error.response.data.message\r\n                     : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listmyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: ORDER_LIST_MY_REQUEST})\r\n\r\n        const { userLogin: { userInfo }} = getState()\r\n\r\n         const config = {\r\n            headers: {\r\n                \r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\r\n        dispatch({type: ORDER_PAY_SUCCESS, payload: data})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                     ? error.response.data.message\r\n                     : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}