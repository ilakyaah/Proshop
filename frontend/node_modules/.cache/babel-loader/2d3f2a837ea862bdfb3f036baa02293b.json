{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Banugopan\\\\Desktop\\\\Proshop\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Col, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails } from '../actions/userActions';\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {// if(!user.name) {\n      //     dispatch(getUserDetails('profile'))\n      // } else {\n      //     setName(user.name)\n      //     setEmail(user.email)\n      // }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {//DISPATCH UPDATE\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"current-password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmpassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"current-password\",\n            placeholder: \"Confirm password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileScreen, \"SIcxDmpB/UOn5AIaVDu6OmJE+Y8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/Banugopan/Desktop/Proshop/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Form","Button","Col","Row","useDispatch","useSelector","Message","Loader","getUserDetails","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Form, Button, Col, Row} from 'react-bootstrap'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails } from '../actions/userActions'\r\n\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n const [name, setName] = useState('')\r\n const [email, setEmail] = useState('')\r\n const [password, setPassword] = useState('')\r\n const [confirmPassword, setConfirmPassword] = useState('')\r\n const [message, setMessage] = useState(null)\r\n\r\n const dispatch = useDispatch()\r\n\r\n const userDetails = useSelector(state => state.userDetails)\r\n const { loading, error, user} = userDetails\r\n\r\n const userLogin = useSelector(state => state.userLogin)\r\n const { userInfo } = userLogin\r\n\r\n useEffect(() => {\r\n    if(!userInfo) {\r\n        history.push('/login')\r\n    }else {\r\n        // if(!user.name) {\r\n        //     dispatch(getUserDetails('profile'))\r\n        // } else {\r\n        //     setName(user.name)\r\n        //     setEmail(user.email)\r\n        // }\r\n    }\r\n}, [dispatch, history, userInfo, user])\r\n\r\n const submitHandler = (e) => {\r\n     e.preventDefault()\r\n     if (password !== confirmPassword){\r\n         setMessage('Passwords do not match')\r\n     } else {\r\n           //DISPATCH UPDATE\r\n     }\r\n }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n             <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                   <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='current-password' placeholder='Enter password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='current-password' placeholder='Confirm password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group> \r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>  \r\n            </Form> \r\n\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}